
# Given a stack, the task is to sort it such that the top of the stack has the greatest element.

# Example 1:

# Input:
# Stack: 3 2 1
# Output: 3 2 1
# Example 2:

# Input:
# Stack: 11 2 32 3 41
# Output: 41 32 11 3 2




class GfG {
    public Stack<Integer> sort(Stack<Integer> s) {
        
        Stack<Integer> store = new Stack<Integer>();
        
        int i=0;
        int[] sorted = new int[s.size()];
        
        while(!s.isEmpty()){
            sorted[i++] = s.peek();
            s.pop();
            
        }
        
        Arrays.sort(sorted);
        
        for(int val:sorted){
            store.push(val);
        }
        
       
      
       return store;
       
    }
}


Time Complexity: O(n log n)
Space Complexity: O(n)





