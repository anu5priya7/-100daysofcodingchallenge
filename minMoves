class Solution {
    
    public static int minMoves(int n, int[] arr) {
     
        int ans =0;
        // for(int i=1; i<n; i++){
        //     if(arr[i-1] == arr[i]){
        //         ans++;x
        //     }
        // }
        
        // this code  not pass when elemnet is equal 
        // for(int i=1; i<n-1; i++){
        //     if(arr[i-1] != arr[i]){
        //     if(arr[i-1]<arr[i] && arr[i] > arr[i+1]){
        //         ans++;
        //     }else if(i<n-2){
        //         if(arr[i] < arr[i+1] ){
        //             ans++;
        //         }
        //     }
        //     }else if (arr[i-1] == arr[i] && arr[i] == arr[i+1]){
        //         ans++;
        //     }
        // }
         
        //  return ans;
        
        
       
        HashMap<Integer, Integer> hm = new HashMap<>();
       
        for (int i = 0; i < n; i++) {
            hm.put(arr[i], hm.getOrDefault(arr[i], 0) + 1);
        }

        int maxFreq = 0;

        // Find the maximum frequency
        for (int freq : hm.values()) {
            maxFreq = Math.max(maxFreq, freq);
        }

        return maxFreq;
    }
}
